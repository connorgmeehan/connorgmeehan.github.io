{"version":3,"sources":["webpack:///./src/components/ExperienceGraph.js","webpack:///./src/components/Profile.js","webpack:///./src/components/CardWork.js","webpack:///./src/pages/index.js","webpack:///./node_modules/core-js/modules/es6.array.fill.js","webpack:///./node_modules/core-js/modules/_array-fill.js"],"names":["ExperienceGraph","render","_this$props","this","props","width","height","data","xInc","length","maxData","map","el","forEach","work","i","max","Math","apply","accData","Array","fill","options","yMin","yMax","xMin","xMax","value","inMin","inMax","outMin","outMax","w","h","bezierCommandCalc","controlPoint","point","a","cps","cpe","close","bezierCommand","line","smooth","current","previous","next","reverse","l","angle","PI","cos","sin","pointA","pointB","lengthX","lengthY","sqrt","pow","atan2","react_default","createElement","className","key","x1","y1","x2","y2","x","y","Fragment","it","points","e","pointsPositionsCalc","xText","reduce","acc","mappedData","indexOf","console","log","maxIx","sanatisedSlug","slug","replace","d","command","svgPath","href","title","Component","styles","backgroundColor","profileGraph","float","position","profileMe","marginTop","fakeData","Profile","Row","style","id","Col","md","smHidden","xsHidden","components_ExperienceGraph","mdOffset","componentDidMount","cardWork","borderRadius","image","display","alignItems","justifyContent","date","opacity","description","CardWork","_ref","mediaEl","frontmatter","video","src","autoPlay","muted","loop","gatsby_browser_entry","to","shortdescription","works","textAlign","fontSize","listQuery","IndexPage","postList","allMarkdownRemark","layout","components_Profile","profile","Grid","edges","node","components_CardWork","fields","$export","__webpack_require__","P","toObject","toAbsoluteIndex","toLength","module","exports","O","aLen","arguments","index","undefined","end","endPos"],"mappings":"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","file":"component---src-pages-index-js-61b9381be69490378809.js","sourcesContent":["import React, {Component} from 'react';\n\n//development: 0.5, interactionDesign: 0.2, conceptGeneration: 0.3, userTesting: 0 }}, \n\nclass ExperienceGraph extends Component {\n  \n  render() {\n    const {width, height, data} = this.props    \n    const xInc = width/(data[0].data.length+2);    \n\n    const smoothing = 0.15\n\n    let maxData = data[0].data.map( el => 0);\n\n    data.forEach( (work) => {\n      work.data.forEach( (el, i) => {\n        maxData[i] += el;\n      })\n    });\n\n    const max = Math.max(...maxData);\n\n    var accData = new Array(4);\n    accData.fill(0);\n    \n    const options = {\n      yMin: 0.001,\n      yMax: max*1.2,\n      xMin: 0,\n      xMax: width\n    }\n    \n    const map = (value, inMin, inMax, outMin, outMax) => {\n      return (value - inMin) * (outMax - outMin) / (inMax - inMin) + outMin;\n    };\n        \n    const pointsPositionsCalc = (points, w, h, options) => points.map(e => {\n      const x = map(e[0], options.xMin, options.xMax, 0, w)\n      const y = map(e[1], options.yMin, options.yMax, 0, h)\n      return [x, y]\n    });\n    \n    const line = (pointA, pointB) => {\n      const lengthX = pointB[0] - pointA[0]\n      const lengthY = pointB[1] - pointA[1]\n      return {\n        length: Math.sqrt(Math.pow(lengthX, 2) + Math.pow(lengthY, 2)),\n        angle: Math.atan2(lengthY, lengthX)\n      }\n    }\n    \n    const controlPoint = (line, smooth) => (current, previous, next, reverse) => {\n      const p = previous || current\n      const n = next || current\n      const l = line(p, n)\n    \n      const angle = l.angle + (reverse ? Math.PI : 0)\n      const length = l.length * smooth\n      const x = current[0] + Math.cos(angle) * length\n      const y = current[1] + Math.sin(angle) * length\n      return [x, y]\n    }\n    \n    const bezierCommand = (controlPoint) => (point, i, a) => {\n      const cps = controlPoint(a[i - 1], a[i - 2], point)\n      const cpe = controlPoint(point, a[i - 1], a[i + 1], true)\n      const close = i === a.length - 1 ? '':''\n      return `C ${cps[0]},${cps[1]} ${cpe[0]},${cpe[1]} ${point[0]},${point[1]}${close}`\n    }\n    \n    const svgPath = (points, command, h) => {\n      const d = points.reduce((acc, e, i, a) => i === 0\n          ? `M ${a[a.length - 1][0]},0 L ${e[0]},0 L ${e[0]},${e[1]}`\n          : `${acc} ${command(e, i, a)}`\n      , '')\n    \n      return d;\n    }\n    \n    const w = width;\n    const h = height;\n\n    const bezierCommandCalc = bezierCommand(controlPoint(line, smoothing))\n    return (\n      <svg width={width} height={height}>\n\n         <g className=\"graph-path-legend\">\n            {[\"\", \"Backend\", \"Frontend\", \"Design Thinking\", \"User Research\", \"\"].map( (el, i) => ( el !== \"\" ? \n            <g key={`graph-legend-${i}`}>\n              <line x1={xInc * i} y1={0} x2={xInc * i} y2={height-30}></line> \n              <text className=\"graph-path-legend-element\" x={xInc * i} y={height-10} >{el}</text>\n            </g> : <> </>))}\n          </g>\n\n        {data.map( (work, it) => {\n\n          let thisPoints = [\n            [0, 0],\n            [0, 0],\n            [xInc*1, accData[0]],\n            [xInc*2, accData[1]],\n            [xInc*3, accData[2]],\n            [xInc*4, accData[3]],\n            [xInc*5-2, 0],\n            [xInc*6, -0.01],\n            [xInc*7, -0.02],\n            [xInc*6, -0.01],\n            [xInc*5-2, 0],\n            [xInc*4, accData[3] + work.data[3]],\n            [xInc*3, accData[2] + work.data[2]],\n            [xInc*2, accData[1] + work.data[1]],\n            [xInc*1, accData[0] + work.data[0]],\n            [0, 0],\n            [0, 0]\n            ];\n\n          const points = pointsPositionsCalc(thisPoints, w, h, options);\n\n          work.data.forEach( (el, i) => {\n            accData[i] += el;\n          });\n\n          let xText = work.data.reduce( (acc, el, i) => (acc + el * i * xInc) );\n          let mappedData = work.data.map( (el, i) => el * xInc * i);\n          xText = (mappedData.indexOf(Math.max(...mappedData))/(mappedData.length+1)) * (width);\n\n          console.log(xText); \n\n          const maxIx = work.data.indexOf(Math.max(...work.data));\n\n          \n          console.log(`Text index: ${maxIx} pos ${xText}`);\n\n          const sanatisedSlug = work.slug.replace(/\\\\/g, '');\n\n          return <g key={`graph-path-${it}`} className=\"graph-path\">\n            <path d={svgPath(points, bezierCommandCalc, h)} fill={`rgb(${255/data.length*it})`} href={`#${sanatisedSlug}`} />       \n            <text x={xText} y={(accData[maxIx] - work.data[maxIx]/2)*height} className=\"graph-path-text\">{work.title}</text>\n          </g>\n          })}\n      </svg>\n    )\n  }\n}\n\n\nexport default ExperienceGraph;\n\n","import React, {Component} from 'react';\n\nimport ExperienceGraph from '../components/ExperienceGraph';\n\nimport { Row, Col } from 'react-bootstrap';\n\nconst styles = {\n  height: '600px',\n  backgroundColor: 'white',\n  profileGraph: {\n    float: 'left',\n    position: 'absolute',\n  },\n  profileMe: {\n    marginTop: '200px',\n  }\n};\n\nconst fakeData = [\n  { slug: \"koalajoey\", title: \"Joey & Koala\", data: [0, 0.1,  0.4, 0.5] },\n  { slug: \"presence\", title: \"Presence\", data: [0.05, 0.45,  0.25, 0] },\n  { slug: \"examplework\", title: \"Gamma Flow\", data: [0.1, 0.35,  0.25, 0.05] },\n];\n\nclass Profile extends Component {\n  render() {\n    return (\n      <Row className=\"profile\" style={styles} id=\"profile\">\n        <Col md={6} smHidden xsHidden>\n          <div className=\"profile-graph\" style={styles.profileGraph}>\n            <ExperienceGraph width={1200} height={500} data={fakeData}/>\n          </div>\n        </Col>\n        <Col md={4} mdOffset={8} style={styles.profileMe} className=\"profile-me\">\n          <h2>Hello, I am Connor</h2>\n          <p className=\"emphasize\">Design Computing student, trying to be a creative technologist, who wants  to build stuff that people find cool and then one day die.</p>\n          <p className=\"emphasize\"><a href=\"mailto:connorgmeehan23@gmail.com\">contactez-moi: connorgmeehan23@gmail.com</a></p>\n        </Col>\n      </Row>\n    )\n  }\n\n  componentDidMount() {\n    \n  }\n}\n\nexport default Profile;\n","import React from 'react';\nimport { Link } from 'gatsby'\n\nimport {Row, Col} from 'react-bootstrap';\n\nconst styles = {\n  cardWork: {\n    marginTop: '75px',\n    borderRadius: '3px',\n\n    image: {\n      height: '400px',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n\n    date: {\n      opacity: '0.8',\n    },\n\n    description: {\n      marginTop: 0,\n    }\n  }\n}\n \nconst CardWork = ({slug, frontmatter}) => {\n\n  const sanatisedSlug = slug.replace(/\\//g,'');\n\n  let mediaEl;\n\n  console.log(`Frontmatter video: ${frontmatter.video} or ${frontmatter.image}`);\n  if(frontmatter.video){\n    mediaEl = <video src={`${frontmatter.video}`} autoPlay muted loop width=\"100%\" ></video>\n  } else if (frontmatter.image) {\n    mediaEl = <img src={`${frontmatter.image}`}/>\n  }\n\n  return (\n    <Col style={styles.cardWork} md={6}>\n      <Link to={slug} className=\"post-preview\">\n        <Row id={sanatisedSlug}>\n          <Col md={12}>\n            <div className=\"of-cover no-overflow\" style={styles.cardWork.image}>\n              {mediaEl}\n            </div>\n          </Col>\n          <Col md={12}>\n                <div className=\"post-list\">\n                  <h2>{frontmatter.title}</h2>\n                  <p style={styles.cardWork.date}>{frontmatter.date}</p>\n                  <p style={styles.cardWork.description} className='emphasize'>{frontmatter.shortdescription}</p>\n                </div>\n          </Col>\n        </Row>\n      </Link>\n    </Col>\n  )\n}\n\nexport default CardWork;","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport {Grid, Row, Col} from 'react-bootstrap';\n\nimport Layout from '../components/layout'\nimport Profile from '../components/Profile';\nimport CardWork from '../components/CardWork';\n\nconst style = {\n  works: {\n    marginTop: '50px',\n    title: {\n      textAlign: 'center',\n      fontSize: '4em',\n    }\n  },\n}\n\nconst IndexPage = (props) => {\n  const postList = props.data.allMarkdownRemark;\n  return (\n    <Layout>\n      <Profile style={style.profile}/>\n      <Grid style={style.works} id=\"works\">\n        <Row>\n          <h2 style={style.works.title}>Works</h2>\n        </Row>\n        <Row>\n          <Col md={10} mdOffset={1}>\n            {postList.edges.map(({ node }, i) => (\n                <CardWork key={i} frontmatter={node.frontmatter} slug={node.fields.slug} />\n            ))}\n          </Col>\n        </Row>\n      </Grid>\n      \n    </Layout>\n  )\n}\n\nexport default IndexPage;\n\nexport const listQuery = graphql`\n  query ListQuery {\n    allMarkdownRemark(\n      filter: { fields: { depth: { eq: 1 } } }\n      sort: { order: DESC, fields: [frontmatter___date] }\n    ) {\n      edges {\n        node {\n          fields{\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM Do YYYY\")\n            title\n            shortdescription\n            video\n            image\n          }\n        }\n      }\n    }\n  }\n`","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', { fill: require('./_array-fill') });\n\nrequire('./_add-to-unscopables')('fill');\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n"],"sourceRoot":""}