{"version":3,"sources":["webpack:///./node_modules/react-bootstrap/es/Grid.js","webpack:///./src/components/ExperienceGraph.js","webpack:///./src/components/Profile.js","webpack:///./src/components/CardWork.js","webpack:///./src/pages/index.js"],"names":["propTypes","fluid","prop_types_default","a","bool","componentClass","elementType_default","Grid_Grid","_React$Component","Grid","apply","this","arguments","Object","inheritsLoose","prototype","render","_this$props","props","Component","className","objectWithoutPropertiesLoose","_splitBsProps","bootstrapUtils","bsProps","elementProps","classes","react_default","createElement","esm_extends","classnames_default","defaultProps","es_Grid","ExperienceGraph","width","height","data","xInc","length","accData","map","el","forEach","work","i","options","yMin","yMax","Math","max","xMin","xMax","value","inMin","inMax","outMin","outMax","w","h","bezierCommandCalc","controlPoint","point","cps","cpe","close","bezierCommand","line","smooth","current","previous","next","reverse","l","angle","PI","cos","sin","pointA","pointB","lengthX","lengthY","sqrt","pow","atan2","points","e","pointsPositionsCalc","key","d","command","reduce","acc","svgPath","fill","styles","backgroundColor","profileGraph","float","position","profileMe","paddingTop","fakeData","title","Profile","Row","style","id","components_ExperienceGraph","Col","md","mdOffset","href","componentDidMount","cardWork","marginTop","borderRadius","image","date","opacity","description","CardWork","_ref","slug","frontmatter","gatsby_browser_entry","to","works","textAlign","fontSize","listQuery","IndexPage","postList","allMarkdownRemark","layout","components_Profile","profile","edges","node","components_CardWork","fields"],"mappings":"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","file":"component---src-pages-index-js-a22581e358dfb9e9403c.js","sourcesContent":["import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime-corejs2/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime-corejs2/helpers/esm/inheritsLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport elementType from 'prop-types-extra/lib/elementType';\nimport { bsClass, prefix, splitBsProps } from './utils/bootstrapUtils';\nvar propTypes = {\n  /**\n   * Turn any fixed-width grid layout into a full-width layout by this property.\n   *\n   * Adds `container-fluid` class.\n   */\n  fluid: PropTypes.bool,\n\n  /**\n   * You can use a custom element for this component\n   */\n  componentClass: elementType\n};\nvar defaultProps = {\n  componentClass: 'div',\n  fluid: false\n};\n\nvar Grid =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Grid, _React$Component);\n\n  function Grid() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Grid.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        fluid = _this$props.fluid,\n        Component = _this$props.componentClass,\n        className = _this$props.className,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"fluid\", \"componentClass\", \"className\"]);\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var classes = prefix(bsProps, fluid && 'fluid');\n    return React.createElement(Component, _extends({}, elementProps, {\n      className: classNames(className, classes)\n    }));\n  };\n\n  return Grid;\n}(React.Component);\n\nGrid.propTypes = propTypes;\nGrid.defaultProps = defaultProps;\nexport default bsClass('container', Grid);","import React, {Component} from 'react';\n\n//development: 0.5, interactionDesign: 0.2, conceptGeneration: 0.3, userTesting: 0 }}, \n\nclass ExperienceGraph extends Component {\n  render() {\n    const {width, height, data} = this.props    \n    const xInc = width/(data[0].data.length+1);    \n\n    const smoothing = 0.15\n\n    let accData = data[0].data.map( el => 0);\n\n    data.forEach( (work) => {\n      work.data.forEach( (el, i) => {\n        accData[i] += el;\n      })\n    });\n\n    const max = Math.max(...accData);\n   \n    \n    const options = {\n      yMin: 0,\n      yMax: max,\n      xMin: 0,\n      xMax: width\n    }\n    \n    const map = (value, inMin, inMax, outMin, outMax) => {\n      return (value - inMin) * (outMax - outMin) / (inMax - inMin) + outMin;\n    };\n        \n    const pointsPositionsCalc = (points, w, h, options) => points.map(e => {\n      const x = map(e[0], options.xMin, options.xMax, 0, w)\n      const y = map(e[1], options.yMin, options.yMax, 0, h)\n      return [x, y]\n    });\n    \n    const line = (pointA, pointB) => {\n      const lengthX = pointB[0] - pointA[0]\n      const lengthY = pointB[1] - pointA[1]\n      return {\n        length: Math.sqrt(Math.pow(lengthX, 2) + Math.pow(lengthY, 2)),\n        angle: Math.atan2(lengthY, lengthX)\n      }\n    }\n    \n    const controlPoint = (line, smooth) => (current, previous, next, reverse) => {\n      const p = previous || current\n      const n = next || current\n      const l = line(p, n)\n    \n      const angle = l.angle + (reverse ? Math.PI : 0)\n      const length = l.length * smooth\n      const x = current[0] + Math.cos(angle) * length\n      const y = current[1] + Math.sin(angle) * length\n      return [x, y]\n    }\n    \n    const bezierCommand = (controlPoint) => (point, i, a) => {\n      const cps = controlPoint(a[i - 1], a[i - 2], point)\n      const cpe = controlPoint(point, a[i - 1], a[i + 1], true)\n      const close = i === a.length - 1 ? '':''\n      return `C ${cps[0]},${cps[1]} ${cpe[0]},${cpe[1]} ${point[0]},${point[1]}${close}`\n    }\n    \n    const svgPath = (points, command, h) => {\n      const d = points.reduce((acc, e, i, a) => i === 0\n          ? `M ${a[a.length - 1][0]},0 L ${e[0]},0 L ${e[0]},${e[1]}`\n          : `${acc} ${command(e, i, a)}`\n      , '')\n    \n      return d;\n    }\n    \n    const w = width;\n    const h = height;\n\n    const bezierCommandCalc = bezierCommand(controlPoint(line, smoothing))\n    return (\n      <svg width={width} height={height}>\n        {data.map( (work, i) => {\n\n          let thisPoints = [\n            [0,0],\n            [xInc*1, accData[0]],\n            [xInc*2, accData[1]],\n            [xInc*3, accData[2]],\n            [xInc*4, accData[3]],\n            [xInc*5, 0] ];\n\n          const points = pointsPositionsCalc(thisPoints, w, h, options);\n\n          work.data.forEach( (el, i) => {\n            accData[i] -= el;\n          })\n\n          return <g key={i} className=\"graph-path\">\n            <path d={svgPath(points, bezierCommandCalc, h)} fill={`rgb(${255/data.length*i})`} />       \n          </g>\n          })}\n      </svg>\n    )\n  }\n}\n\n\nexport default ExperienceGraph;\n\n","import React, {Component} from 'react';\n\nimport ExperienceGraph from '../components/ExperienceGraph';\n\nimport { Row, Col } from 'react-bootstrap';\n\nconst styles = {\n  height: '600px',\n  backgroundColor: 'white',\n  profileGraph: {\n    float: 'left',\n    position: 'absolute',\n  },\n  profileMe: {\n    paddingTop: '300px',\n\n  }\n};\n\nconst fakeData = [\n  { title: \"Joey & Koala\", data: [0, 0.3,  0.3, 0.4] },\n  { title: \"Presence\", data: [0.4, 0.3,  0.3, 0] },\n  { title: \"Joey & Koala\", data: [0.2, 0.4,  0.2, 0.2] },\n];\n\nclass Profile extends Component {\n  render() {\n    return (\n      <Row className=\"profile\" style={styles} id=\"profile\">\n        <div className=\"profile-graph\" style={styles.profileGraph}>\n          <ExperienceGraph width={1400} height={500} data={fakeData}/>\n        </div>\n        <Col md={4} mdOffset={6} style={styles.profileMe} className=\"profile-me\">\n          <h2>Hello, I am Connor</h2>\n          <p className=\"emphasize\">Design Computing student, trying to be a creative technologist.\n          <br></br>I want to build stuff people find cool and then one day die.</p>\n          <p className=\"emphasize\"><a href=\"email:connorgmeehan23@gmail.com\">KONTAKT: connorgmeehan23@gmail.com</a></p>\n        </Col>\n      </Row>\n    )\n  }\n\n  componentDidMount() {\n    \n  }\n}\n\nexport default Profile;\n","import React from 'react';\nimport { Link } from 'gatsby'\n\nimport {Row, Col} from 'react-bootstrap';\n\nconst styles = {\n  cardWork: {\n    marginTop: '75px',\n    borderRadius: '3px',\n\n    image: {\n      backgroundColor: 'white',\n    },\n\n    date: {\n      opacity: '0.8',\n    },\n\n    description: {\n      marginTop: '50px',\n    }\n  }\n}\n \nconst CardWork = ({slug, frontmatter}) => (\n  <Col style={styles.cardWork} md={5} mdOffset={1}>\n    <Row>\n      <Col md={12}>\n        <div style={styles.cardWork.image}>\n\n        </div>\n      </Col>\n      <Col md={12}>\n        <Link to={slug} className=\"post-preview\">\n            <div className=\"post-list\">\n              <h1>{frontmatter.title}</h1>\n              <p style={styles.cardWork.date}>{frontmatter.date}</p>\n              <p style={styles.cardWork.description} className='emphasize'>{frontmatter.description}</p>\n            </div>\n        </Link>\n      </Col>\n    </Row>\n  </Col>\n)\nexport default CardWork;","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport {Grid, Row} from 'react-bootstrap';\n\nimport Layout from '../components/layout'\nimport Profile from '../components/Profile';\nimport CardWork from '../components/CardWork';\n\nconst style = {\n  works: {\n    marginTop: '50px',\n    title: {\n      textAlign: 'center',\n      fontSize: '4em',\n    }\n  },\n}\n\nconst IndexPage = (props) => {\n  const postList = props.data.allMarkdownRemark;\n  return (\n    <Layout>\n      <Profile style={style.profile}/>\n      <Grid style={style.works} id=\"works\">\n        <Row>\n          <h2 style={style.works.title}>Works</h2>\n        </Row>\n          {postList.edges.map(({ node }, i) => (\n              <CardWork key={i} frontmatter={node.frontmatter} slug={node.fields.slug} />\n          ))}\n      </Grid>\n      \n    </Layout>\n  )\n}\n\nexport default IndexPage;\n\nexport const listQuery = graphql`\n  query ListQuery {\n    allMarkdownRemark(\n      filter: { fields: { depth: { eq: 1 } } }\n      sort: { order: DESC, fields: [frontmatter___date] }\n    ) {\n      edges {\n        node {\n          fields{\n            slug\n          }\n          \n          frontmatter {\n            date(formatString: \"MMMM Do YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}